name: Build WebView APK

on:
  workflow_dispatch:
    inputs:
      url:
        description: 'URL to create APK for'
        required: true
      package_suffix:
        description: 'Package suffix (a unique value if you want to install multiple generated APKs on the same device)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
        with:
          cache-disabled: true

      - name: Fetch page title
        run: |
          URL="${{ github.event.inputs.url }}"
          TITLE=$(curl -sL "$URL" | grep -o '<title[^>]*>.*</title>' | sed -E 's/<\/?title>//g' | head -n 1 | xargs)
          if [ -z "$TITLE" ]; then
            TITLE="WebToAPK"
          fi
          echo "TITLE=$TITLE" >> $GITHUB_ENV

      - name: Set package name
        run: |
          if [ -n "${{ github.event.inputs.package_suffix }}" ]; then
            NEW_PACKAGE="net.devtrends.webtosdk.${{ github.event.inputs.package_suffix }}"
            sed -i "s|applicationId \"net.devtrends.webtoapk\"|applicationId \"$NEW_PACKAGE\"|g" android-webview-app/app/build.gradle
          fi

      - name: Prepare project
        run: |
          cd android-webview-app
          sed -i "s|https://example.com|${{ github.event.inputs.url }}|g" app/src/main/java/net/devtrends/webtoapk/MainActivity.kt
          sed -i "s|WebToAPK|$TITLE|g" app/src/main/res/values/strings.xml

      - name: Build release APK
        run: |
          cd android-webview-app
          gradle assembleRelease

      - name: List files
        run: ls -la

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: webview-app-apk
          path: android-webview-app/app/build/outputs/apk/release/app-release.apk
